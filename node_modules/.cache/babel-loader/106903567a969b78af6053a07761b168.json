{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jiun-chiyang/Desktop/\\u9762\\u8A66/pilot-task/src/ValidationLog.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from \"react-router-dom\";\n\nconst ValidationLog = () => {\n  _s();\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        history.push(\"/users\");\n      }, 500);\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\"),\n      password: Yup.string().required(\"No password provided\").min(8, \"Password has to be at least 8 characters.\")\n    }),\n    children: props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: 22\n            },\n            children: \"Login to view our user pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: values.email,\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            placeholder: \"Enter your email\",\n            className: errors.email && touched.email && \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-feedback\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: values.password,\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            placeholder: \"Enter your password\",\n            className: errors.password && touched.password && \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-feedback\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ValidationLog, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ValidationLog;\nexport default ValidationLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidationLog\");","map":{"version":3,"sources":["/Users/jiun-chiyang/Desktop/面試/pilot-task/src/ValidationLog.js"],"names":["React","Formik","Yup","BrowserRouter","Router","Route","Switch","Redirect","useHistory","ValidationLog","history","email","password","values","setSubmitting","setTimeout","push","object","shape","string","required","min","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {Formik} from \"formik\"\nimport * as Yup from \"yup\"\nimport  {BrowserRouter as Router,Route,Switch,Redirect,useHistory}  from \"react-router-dom\"\n\n\nconst ValidationLog = () =>  {\n    const history = useHistory();\n    return (\n    <Formik \n    \n     initialValues = {{email: \"\", password: \"\"}}\n     onSubmit = {(values,{ setSubmitting}) => {\n         setTimeout(() => {\n            history.push(\"/users\")\n            \n         }, 500);\n     }}\n     \n     validationSchema = {Yup.object().shape({\n        email: Yup.string()\n            .email()\n            .required(\"Required\"),\n        password: Yup.string()\n            .required(\"No password provided\")\n            .min(8,\"Password has to be at least 8 characters.\")\n     })\n            \n    }\n    \n    >\n        {props => {\n            const {\n                values,\n                touched,\n                errors,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit\n            } = props\n\n            \n            \n            \n            return (\n                    \n                    <div>\n                        \n\n                        <form autoComplete = \"off\" onSubmit = {handleSubmit}>\n                            <h2 style={{fontSize: 22}}>Login to view our user pool</h2>\n                            <label htmlFor=\"email\">Email:</label>\n                            <input type=\"text\" value={values.email} name=\"email\" onChange={handleChange} onBlur={handleBlur} placeholder=\"Enter your email\" className={errors.email && touched.email && \"error\"}/>\n                            {errors.email && touched.email && (<div className=\"input-feedback\">{errors.email}</div>)}\n                            <label htmlFor=\"email\">Password:</label>\n                            <input type=\"password\" value={values.password} name=\"password\" onChange={handleChange} onBlur={handleBlur} placeholder=\"Enter your password\" className={errors.password && touched.password && \"error\"}/>\n                            {errors.password && touched.password && (<div className=\"input-feedback\">{errors.password}</div>)}\n                            <button type=\"submit\" disabled={isSubmitting}>Login</button>\n                            \n                        </form>\n\n                    </div>\n            )\n        }}\n    </Formik>)\n} \n\n\nexport default ValidationLog\n"]},"metadata":{},"sourceType":"module"}