{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiun-chiyang/pilot-task/src/ValidationLog.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from 'react-router-dom';\n\nconst ValidationLog = () => /*#__PURE__*/_jsxDEV(Formik, {\n  initialValues: {\n    email: \"\",\n    password: \"\"\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      browserHistory.push('/users');\n      console.log(\"Logged in\", values);\n    }, 500);\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required(\"Required\"),\n    password: Yup.string().required(\"No password provided\").min(8, \"Password has to be at least 8 characters.\")\n  }),\n  children: props => {\n    const {\n      values,\n      touched,\n      errors,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: 22\n          },\n          children: \"Login to view our user pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: values.email,\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          placeholder: \"Enter your email\",\n          className: errors.email && touched.email && \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-feedback\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: values.password,\n          name: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          placeholder: \"Enter your password\",\n          className: errors.password && touched.password && \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-feedback\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this);\n\n_c = ValidationLog;\nexport default ValidationLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidationLog\");","map":{"version":3,"sources":["/Users/jiun-chiyang/pilot-task/src/ValidationLog.js"],"names":["React","Formik","Yup","useHistory","ValidationLog","email","password","values","setSubmitting","setTimeout","browserHistory","push","console","log","object","shape","string","required","min","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {Formik} from \"formik\"\nimport * as Yup from \"yup\"\nimport { useHistory } from 'react-router-dom';\n\nconst ValidationLog = () => (\n    <Formik \n     initialValues = {{email: \"\", password: \"\"}}\n     onSubmit = {(values, { setSubmitting}) => {\n         setTimeout(() => {\n            browserHistory.push('/users');\n            console.log(\"Logged in\", values)\n         }, 500);\n     }}\n     \n     validationSchema = {Yup.object().shape({\n        email: Yup.string()\n            .email()\n            .required(\"Required\"),\n        password: Yup.string()\n            .required(\"No password provided\")\n            .min(8,\"Password has to be at least 8 characters.\")\n     })\n            \n\n    }\n    >\n        {props => {\n            const {\n                values,\n                touched,\n                errors,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit\n            } = props\n\n            \n            return (\n                    \n                    <div>\n                        \n\n                        <form autoComplete = \"off\" onSubmit = {handleSubmit}>\n                            <h2 style={{fontSize: 22}}>Login to view our user pool</h2>\n                            <label htmlFor=\"email\">Email:</label>\n                            <input type=\"text\" value={values.email} name=\"email\" onChange={handleChange} onBlur={handleBlur} placeholder=\"Enter your email\" className={errors.email && touched.email && \"error\"}/>\n                            {errors.email && touched.email && (<div className=\"input-feedback\">{errors.email}</div>)}\n                            <label htmlFor=\"email\">Password:</label>\n                            <input type=\"password\" value={values.password} name=\"password\" onChange={handleChange} onBlur={handleBlur} placeholder=\"Enter your password\" className={errors.password && touched.password && \"error\"}/>\n                            {errors.password && touched.password && (<div className=\"input-feedback\">{errors.password}</div>)}\n                            <button type=\"submit\" disabled={isSubmitting}>Login</button>\n\n                           \n                            \n                            \n                            \n                        </form>\n\n                        \n                    </div>\n                \n                \n            )\n        }}\n    </Formik>\n)\n\n\nexport default ValidationLog"]},"metadata":{},"sourceType":"module"}