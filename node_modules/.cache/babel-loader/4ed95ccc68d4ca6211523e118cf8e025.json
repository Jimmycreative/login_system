{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiun-chiyang/Desktop/pilot-task/src/ValidationLog.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { NavLink } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\n\nclass ValidationLog extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLogin: false\n    };\n  }\n\n  render() {\n    {\n      props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = props;\n      };\n    }\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          console.log(\"Logged in\", values);\n        }, 500);\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email().required(\"Required\"),\n        password: Yup.string().required(\"No password provided\").min(8, \"Password has to be at least 8 characters.\")\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: 22\n          },\n          children: \"Login to view our user pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: values.email,\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          placeholder: \"Enter your email\",\n          className: errors.email && touched.email && \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-feedback\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: values.password,\n          name: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          placeholder: \"Enter your password\",\n          className: errors.password && touched.password && \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-feedback\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/users\",\n          activeClassName: \"active\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 75\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nexport default ValidationLog;","map":{"version":3,"sources":["/Users/jiun-chiyang/Desktop/pilot-task/src/ValidationLog.js"],"names":["React","Formik","Yup","NavLink","useHistory","ValidationLog","Component","constructor","state","isLogin","render","props","values","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","email","password","setSubmitting","setTimeout","console","log","object","shape","string","required","min","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {Formik} from \"formik\"\nimport * as Yup from \"yup\"\nimport {NavLink} from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\n\n\n\n\nclass ValidationLog extends Component {\n\n    constructor() {\n        super()\n        this.state={\n            isLogin: false\n        }\n    }\n    \n    \n        \n\n            \n            render() {\n                {props => {\n                    const {\n                        values,\n                        touched,\n                        errors,\n                        isSubmitting,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit\n                    } = props}}\n\n                return (\n                    <Formik \n    \n                    initialValues = {{email: \"\", password: \"\"}}\n                    onSubmit = {(values, { setSubmitting}) => {\n                        setTimeout(() => {\n                           \n                           console.log(\"Logged in\", values)\n                        }, 500);\n                    }}\n                    \n                    validationSchema = {Yup.object().shape({\n                       email: Yup.string()\n                           .email()\n                           .required(\"Required\"),\n                       password: Yup.string()\n                           .required(\"No password provided\")\n                           .min(8,\"Password has to be at least 8 characters.\")\n                    })\n                           \n               \n                   }\n                   >\n                        <form autoComplete = \"off\" onSubmit = {handleSubmit}>\n                            <h2 style={{fontSize: 22}}>Login to view our user pool</h2>\n                            <label htmlFor=\"email\">Email:</label>\n                            <input type=\"text\" value={values.email} name=\"email\" onChange={handleChange} onBlur={handleBlur} placeholder=\"Enter your email\" className={errors.email && touched.email && \"error\"}/>\n                            {errors.email && touched.email && (<div className=\"input-feedback\">{errors.email}</div>)}\n                            <label htmlFor=\"email\">Password:</label>\n                            <input type=\"password\" value={values.password} name=\"password\" onChange={handleChange} onBlur={handleBlur} placeholder=\"Enter your password\" className={errors.password && touched.password && \"error\"}/>\n                            {errors.password && touched.password && (<div className=\"input-feedback\">{errors.password}</div>)}\n                            <NavLink to='/users' activeClassName='active'><button type=\"submit\" disabled={isSubmitting}>Login</button></NavLink>\n                            \n                        </form>\n\n                    </Formik>\n                        \n                        \n                    \n                    \n                )}\n        \n    \n\n}\n\nexport default ValidationLog"]},"metadata":{},"sourceType":"module"}