{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiun-chiyang/pilot-task/src/Validation.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { HashRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport PostList from \"./PostList\";\n\nconst Validation = () => /*#__PURE__*/_jsxDEV(Formik, {\n  initialValues: {\n    email: \"\",\n    password: \"\"\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      console.log(\"Logged in\", values);\n    }, 500);\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required(\"Required\"),\n    password: Yup.string().required(\"No password provided\").min(8, \"Password has to be at least 8 characters.\")\n  }),\n  children: props => {\n    const {\n      values,\n      touched,\n      errors,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = props;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: 22\n            },\n            children: \"Login to view our user pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: values.email,\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            placeholder: \"Enter your email\",\n            className: errors.email && touched.email && \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-feedback\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: values.password,\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            placeholder: \"Enter your password\",\n            className: errors.password && touched.password && \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-feedback\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/users\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 47\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users\",\n          component: PostList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 5\n}, this);\n\n_c = Validation;\nexport default Validation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"sources":["/Users/jiun-chiyang/pilot-task/src/Validation.js"],"names":["React","Formik","Yup","HashRouter","Router","Route","Switch","Link","PostList","Validation","email","password","values","setSubmitting","setTimeout","console","log","object","shape","string","required","min","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {Formik} from \"formik\"\nimport * as Yup from \"yup\"\nimport  {HashRouter as Router,Route,Switch,Link}  from \"react-router-dom\"\nimport PostList from \"./PostList\"\n\n\n\nconst Validation = () => (\n    <Formik \n     initialValues = {{email: \"\", password: \"\"}}\n     onSubmit = {(values, { setSubmitting}) => {\n         setTimeout(() => {\n             console.log(\"Logged in\", values)\n         }, 500)\n     }}\n     \n     validationSchema = {Yup.object().shape({\n        email: Yup.string()\n            .email()\n            .required(\"Required\"),\n        password: Yup.string()\n            .required(\"No password provided\")\n            .min(8,\"Password has to be at least 8 characters.\")\n     })\n            \n\n    }\n    >\n        {props => {\n            const {\n                values,\n                touched,\n                errors,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit\n            } = props\n\n            \n            return (\n                <Router>\n                    <div>\n                        <form autoComplete = \"off\" onSubmit = {handleSubmit}>\n                            <h2 style={{fontSize: 22}}>Login to view our user pool</h2>\n                            <label htmlFor=\"email\">Email:</label>\n                            <input type=\"text\" value={values.email} name=\"email\" onChange={handleChange} onBlur={handleBlur} placeholder=\"Enter your email\" className={errors.email && touched.email && \"error\"}/>\n                            {errors.email && touched.email && (<div className=\"input-feedback\">{errors.email}</div>)}\n                            <label htmlFor=\"email\">Password:</label>\n                            <input type=\"password\" value={values.password} name=\"password\" onChange={handleChange} onBlur={handleBlur} placeholder=\"Enter your password\" className={errors.password && touched.password && \"error\"}/>\n                            {errors.password && touched.password && (<div className=\"input-feedback\">{errors.password}</div>)}\n                            <Link to=\"/users\"><button type=\"submit\" disabled={isSubmitting}>Login</button> </Link>\n                        </form>\n                        <Route path=\"/users\" component={PostList}></Route>\n                    </div>\n                </Router>\n                \n            )\n        }}\n    </Formik>\n)\n\n\nexport default Validation"]},"metadata":{},"sourceType":"module"}